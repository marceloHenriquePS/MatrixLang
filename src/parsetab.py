
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "COMMA CREATE ID NUMBER SEMICOLON STRINGstatement : CREATE '(' matrix ')' SEMICOLONmatrix : '[' row_list ']'row_list : row\n                | row COMMA row_listrow : '[' value_list ']'value_list : value\n                    | value COMMA value_listvalue : NUMBER\n            | STRING"
    
_lr_action_items = {'CREATE':([0,],[2,]),'$end':([1,10,],[0,-1,]),'(':([2,],[3,]),'[':([3,5,16,],[5,7,7,]),')':([4,15,],[6,-2,]),'SEMICOLON':([6,],[10,]),'NUMBER':([7,18,],[13,13,]),'STRING':([7,18,],[14,14,]),']':([8,9,11,12,13,14,17,19,20,],[15,-3,17,-6,-8,-9,-5,-4,-7,]),'COMMA':([9,12,13,14,17,],[16,18,-8,-9,-5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'matrix':([3,],[4,]),'row_list':([5,16,],[8,19,]),'row':([5,16,],[9,9,]),'value_list':([7,18,],[11,20,]),'value':([7,18,],[12,12,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> CREATE ( matrix ) SEMICOLON','statement',5,'p_statement_create','matrix_parser.py',5),
  ('matrix -> [ row_list ]','matrix',3,'p_matrix','matrix_parser.py',10),
  ('row_list -> row','row_list',1,'p_row_list','matrix_parser.py',14),
  ('row_list -> row COMMA row_list','row_list',3,'p_row_list','matrix_parser.py',15),
  ('row -> [ value_list ]','row',3,'p_row','matrix_parser.py',23),
  ('value_list -> value','value_list',1,'p_value_list','matrix_parser.py',27),
  ('value_list -> value COMMA value_list','value_list',3,'p_value_list','matrix_parser.py',28),
  ('value -> NUMBER','value',1,'p_value','matrix_parser.py',35),
  ('value -> STRING','value',1,'p_value','matrix_parser.py',36),
]
